
CREATE TABLE DimEndereco (
    sk_endereco INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_endereco INT NOT NULL,
    rua VARCHAR2(255),
    numero VARCHAR2(10),
    bairro VARCHAR2(100),
    cidade VARCHAR2(100),
    estado VARCHAR2(50),
    cep VARCHAR2(20)
);


CREATE TABLE DimFonteRenda (
    sk_fonte_renda INT GENERATED BY DEFAULT AS IDENTITY (START WITH 4000) PRIMARY KEY,
    idfonte_renda INT NOT NULL,
    descricao VARCHAR2(100)
);


CREATE TABLE DimFaixaRenda (
    sk_faixa_renda INT GENERATED BY DEFAULT AS IDENTITY (START WITH 3000) PRIMARY KEY,
    idfaixa_renda INT NOT NULL,
    descricao VARCHAR2(100)
);


CREATE TABLE DimPerfilDemografico (
    sk_PerfilDemografico INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    idade_media INT NOT NULL,
    distribuicao_idade VARCHAR2(255) NOT NULL,
    distribuicao_sexo VARCHAR2(255) NOT NULL,
    sk_endereco INT,
    CONSTRAINT fk_endereco_perfil_demografico FOREIGN KEY (sk_endereco) REFERENCES DimEndereco(sk_endereco)
);


CREATE TABLE DimTempo (
    sk_tempo INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    data DATE NOT NULL,
    ano INT NOT NULL,
    trimestre INT NOT NULL,
    mes INT NOT NULL,
    dia INT NOT NULL,
    dia_semana INT NOT NULL,
    nome_mes VARCHAR2(50) NOT NULL,
    CONSTRAINT uq_data UNIQUE (data)
);


CREATE TABLE DimCliente (
    sk_cliente INT GENERATED BY DEFAULT AS IDENTITY(START WITH 1000) PRIMARY KEY,
    idcliente INT NOT NULL,
    nome VARCHAR2(100),
    cpf VARCHAR2(15) NOT NULL,
    idade INT NOT NULL,
    data_nascimento DATE NOT NULL,
    sexo VARCHAR2(1),
    email VARCHAR2(100),
    telefone VARCHAR2(20),
    sk_endereco INT,
    sk_fonte_renda INT,
    sk_faixa_renda INT,
    CONSTRAINT fk_endereco_cliente FOREIGN KEY (sk_endereco) REFERENCES DimEndereco(sk_endereco),
    CONSTRAINT fk_fonte_renda_cliente FOREIGN KEY (sk_fonte_renda) REFERENCES DimFonteRenda(sk_fonte_renda),
    CONSTRAINT fk_faixa_renda_cliente FOREIGN KEY (sk_faixa_renda) REFERENCES DimFaixaRenda(sk_faixa_renda)
);


CREATE TABLE DimProduto (
    sk_produto NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    idproduto NUMBER NOT NULL,
    nome_produto VARCHAR2(255) NOT NULL,
    tipo_produto VARCHAR2(100) NOT NULL,
    valor_minimo NUMBER(10, 2) NOT NULL,
    valor_maximo NUMBER(10, 2) NOT NULL,
    numero_parcelas_maximo NUMBER NOT NULL,
    condicoes_especiais CLOB
);



CREATE TABLE DimPagamento (
    sk_pagamento NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    numero_parcela INT NOT NULL,
    valor_parcela NUMBER(10, 2) NOT NULL,
    data_vencimento DATE NOT NULL,
    data_pagamento DATE NULL,
    status_pagamento VARCHAR2(20) NOT NULL,
    dias_atraso NUMBER, -- Número de dias de atraso
    juros_mora NUMBER(10, 2), -- Juros de mora aplicados
    multa_atraso NUMBER(10, 2), -- Multa por atraso
    valor_final NUMBER(10, 2), -- Valor total da parcela com juros e multa
    sk_contrato NUMBER NOT NULL,
    FOREIGN KEY (sk_contrato) REFERENCES DimContrato(sk_contrato) 
);
CREATE TABLE DimContrato (
    sk_contrato NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
    idcontrato NUMBER NOT NULL,
    codigo_contrato VARCHAR2(200) UNIQUE NOT NULL,
    valor_emprestimo NUMBER(10, 2) NOT NULL,
    numero_parcelas INT NOT NULL,
    taxa_juros NUMBER(5, 2) NOT NULL,
    data_contratacao DATE NOT NULL,
    status_contrato VARCHAR2(20) NOT NULL,
    sk_cliente NUMBER NOT NULL,
    sk_produto NUMBER NOT NULL,
    FOREIGN KEY (sk_cliente) REFERENCES DimCliente(sk_cliente),
    FOREIGN KEY (sk_produto) REFERENCES DimProduto(sk_produto)
);


/*CREATE TABLE DimPerfilDemografico (
    sk_perfil_demografico NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    idade_media NUMBER, -- Média das idades dos clientes
    distribuicao_idade VARCHAR2(255),
    distribuicao_sexo VARCHAR2(255), 
    faixa_renda_id NUMBER, 
    fonte_renda_id NUMBER, 
    endereco_id NUMBER, -- Chave estrangeira para endereço
    CONSTRAINT fk_perfil_faixa_renda FOREIGN KEY (faixa_renda_id) REFERENCES faixa_renda (idfaixa_renda),
    CONSTRAINT fk_perfil_fonte_renda FOREIGN KEY (fonte_renda_id) REFERENCES fonte_renda (idfonte_renda),
    CONSTRAINT fk_perfil_endereco FOREIGN KEY (endereco_id) REFERENCES endereco (idendereco)
);*/


-- Tabela FatoTransacao
/*CREATE TABLE FatoTransacao (
    sk_transacaofinanceira NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 7000 INCREMENT BY 1) NOT NULL,
    sk_cliente NUMBER NOT NULL,
    sk_fonte_renda NUMBER NOT NULL,
    sk_faixa_renda NUMBER NOT NULL,
    sk_PerfilDemografico NUMBER NOT NULL,
    sk_Tempo NUMBER NOT NULL,
    data_transacao DATE NOT NULL,
    valor_transacao DECIMAL(10, 2) NOT NULL,
    Inadimplente NUMBER NOT NULL,
    CONSTRAINT fk_cliente_fato_transacao FOREIGN KEY (sk_cliente) REFERENCES DimCliente(sk_cliente),
    CONSTRAINT fk_fonte_renda_fato_transacao FOREIGN KEY (sk_fonte_renda) REFERENCES DimFonteRenda(sk_fonte_renda),
    CONSTRAINT fk_faixa_renda_fato_transacao FOREIGN KEY (sk_faixa_renda) REFERENCES DimFaixaRenda(sk_faixa_renda),
    CONSTRAINT fk_tempo_fato_transacao FOREIGN KEY (sk_Tempo) REFERENCES DimTempo(sk_tempo),
    CONSTRAINT fk_PerfilDemografico_fato_transacao FOREIGN KEY (sk_PerfilDemografico) REFERENCES DimPerfilDemografico(sk_PerfilDemografico)
);*/



CREATE TABLE FatoResumoPagamentosAtrasados (
    sk_pagamento_atrasado NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ano NUMBER,
    mes NUMBER,
    total_pagamentos_atrasados NUMBER,
    valor_total_atrasado NUMBER,
    tempo_id NUMBER,
    cliente_id NUMBER, 
    contrato_id NUMBER, 
    produto_id NUMBER, 
    CONSTRAINT fk_fato_tempo FOREIGN KEY (tempo_id) REFERENCES DimTempo (sk_tempo),
    CONSTRAINT fk_fato_cliente FOREIGN KEY (cliente_id) REFERENCES DimCliente (sk_cliente),
    CONSTRAINT fk_fato_contrato FOREIGN KEY (contrato_id) REFERENCES DimContrato (sk_contrato),
    CONSTRAINT fk_fato_produto FOREIGN KEY (produto_id) REFERENCES DimProduto (sk_produto)
);

